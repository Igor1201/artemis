on: pull_request

name: CI

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repository
      uses: actions/checkout@master
    - name: Run tests
      uses: comigor/actions/dart-test@master
      env:
        DTA_EXCLUDE_REGEX: example
  check-version-and-changelog:
    needs: test
    runs-on: ubuntu-latest
    container: golang
    steps:
    - uses: actions/checkout@master
    - run: |
        GO111MODULE=on go get -u github.com/itchyny/gojq/cmd/gojq@d24ecb5d89a9eee8b4cd2071bdff7585a8b44f0e
        cd "$GITHUB_WORKSPACE"
    - name: Check if version on pubspec.yaml was changed and if there's an entry for this new version on CHANGELOG
      run: |
        echo "GITHUB EVENT NAME: ${{ github.event_name }}"
        echo "GITHUB REF: $GITHUB_REF"
        echo "GITHUB REF: ${{ github.ref }}"
        echo "GITHUB HEAD REF: ${{ github.head_ref }}"
        echo "GITHUB BASE REF: ${{ github.base_ref }}"

        git fetch --prune --unshallow
        where="origin/${{ github.base_ref }}"

        diff=$(git diff $where pubspec.yaml)
        echo "$diff" | grep -E '\+.*version' || {
          echo "Version not bumped on pubspec"
          exit 1
        }

        package_version=$(cat pubspec.yaml | gojq --yaml-input -r '.version')

        # If are on master or beta
        if [ "${{ github.base_ref }}" = "master" ]; then
          echo "$package_version" | grep beta && {
            echo "Version cant contain beta"
            exit 1
          }
        elif [ "${{ github.base_ref }}" = "beta" ]; then
          echo "$package_version" | grep beta || {
            echo "Missing beta on version"
            exit 1
          }
        fi

        cat CHANGELOG.md | grep "$package_version"